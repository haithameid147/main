package com.youtube.jwt.entity;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * AdminUser generated by hbm2java
 */
@Entity
@Table(name = "service"
)
public class Service implements java.io.Serializable {

    private Integer id;
    private String name;

    @JsonBackReference
    private Set<Foundation> foundation = new HashSet<Foundation>();

    @JsonBackReference(value = "userrr-movement")
    private Set<Orders> orders = new HashSet<Orders>();

    public Service() {
    }
    

    public Service(String name) {
		super();
		this.name = name;
	}


	public Service(Integer id, String name, Set<Foundation> foundation) {
        super();
        this.id = id;
        this.name = name;
        this.foundation = foundation;
    }

	
//  @Id
//  @Column(name = "id")
//  @GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "id_Sequence")
//  @SequenceGenerator(name = "id_Sequence", sequenceName = "ID_SEQ")
	
	
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "service", cascade = CascadeType.ALL)
    public Set<Foundation> getFoundation() {
        return foundation;
    }

    public void setFoundation(Set<Foundation> foundation) {
        this.foundation = foundation;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "service", cascade = CascadeType.ALL)
    public Set<Orders> getOrders() {
        return orders;
    }

    public void setOrders(Set<Orders> orders) {
        this.orders = orders;
    }

}
